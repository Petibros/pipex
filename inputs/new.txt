static int  pipex(t_args *args, char **argv, char **envp)
{
    int     pid;
    int     status = 0;
    char    *path;
    
    pipe(args->pipefd);
    pid = fork();
    if (pid == 0)
    {   
        printf("je suis le fils\n");
        close(args->pipefd[0]);
        dup2(args->fd_in, 0);
        dup2(args->pipefd[1], 1);
        args->cmd = ft_split(argv[0], ' ');
        if (args->cmd[0][0] == '/')
            path = ft_strdup(args->cmd[0]);
        else
            path = get_path(args, envp);
        execve(path, args->cmd, envp);
    }
    if (pid > 0)
    {   
        printf("je suis ton père\n");
        waitpid(pid, &status, 0);
        printf("je suis encore ton père\n");
        close(args->pipefd[1]);
        dup2(args->pipefd[0], 0);
        dup2(args->fd_out, 1);
        args->cmd = ft_split(argv[1], ' ');
        if (args->cmd[0][0] == '/')
            path = ft_strdup(args->cmd[0]);
        else
            path = get_path(args, envp);
        execve(path, args->cmd, envp);
        printf("je suis ton pere\n");
    }
    return (1);
}
